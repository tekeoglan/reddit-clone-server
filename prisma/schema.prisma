generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  comment_id    Int      @id @default(autoincrement())
  post_id       Int
  user_id       Int
  time_stamp    DateTime @default(now()) @db.Timestamp(6)
  text          String
  upvotes_count Int?     @default(0)
  posts         posts    @relation(fields: [post_id], references: [post_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_post_id")
  users         users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model posts {
  post_id       Int        @id @default(autoincrement())
  title         String     @db.VarChar(255)
  text          String?    @default("")
  img_path      String?    @default("") @db.VarChar(255)
  yt_path       String?    @default("") @db.VarChar(255)
  upvotes_count Int?       @default(0)
  user_id       Int
  time_stamp    DateTime   @default(now()) @db.Timestamp(6)
  comments      comments[]
  users         users      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model users {
  user_id     Int        @id @default(autoincrement())
  user_name   String     @db.VarChar(24)
  avatar_path String?    @db.VarChar(255)
  email       String     @unique @db.VarChar(140)
  password    String     @db.VarChar(140)
  comments    comments[]
  posts       posts[]
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}
